///////////////////////////////////////////////////////////////////////////////
//FOR THE ENTRIES IN DetVects_C_T_D.coc WE FIND THE MINIMUM LENGTH OF THE    //
//TAIL OF THE H-VECTOR WHICH IS NOT THE TAIL OF A PURE O-SEQUENCE WITH THE   //
//SAME PARAMETERS                                                            //
///////////////////////////////////////////////////////////////////////////////
//////////////////////implemented by Alexandru Constnatninescu For CoCoA-4.7///
///////////////////////////////////////////////////////////////////////////////

Source "UsualFunctions.coc";
Source "HVectorFromMatrixFunction.coc";

For DD:=10 To 10 Do
  PrintLn("========++++++++++++++++++++++++++++++++==========");
  D:=DD;
  C:=Sprint(3);--codim as string
  T:=Sprint(3);--type
  DD:=Sprint(DD);--degree of gens
  Source "PureOSeq_"+C+"_"+T+"_"+DD+".coc";
  Source "DetVects_"+C+"_"+T+"_"+DD+".coc";
  LH:=Var("DetVects_"+C+"_"+T+"_"+DD);
  LP:=Var("PureOSeq_"+C+"_"+T+"_"+DD);
  Foreach H In LH Do
    K:=H[1]-1;
    Repeat K:=K+1; TH:=Last(H[2],K); Until Len([A In LP |Last(A,K)=TH])=0 Or K=Len(H[2]);
    TH:=Last(H[2],K-1);
    SAMETAIL:=[A In LP| Last(A,K-1)=TH];
    CPOINT:=MakeSet([A[D+1-K+1]| A In SAMETAIL]);
    CP:=H[2][D+1-K+1];
    MINP:=Min(CPOINT);
    MAXP:=Max(CPOINT);
    If CP < MINP Then Print(" !<  ");
    Elif CP> MAXP Then Print(" > ");
    Elif CP IsIn CPOINT Then Print(" ERROR! The length of the tail is Not right!");
    Else PrintLn(" !!inbetween...!!  C=",C," T= ",T," D= ",DD," H = ",H[2]);
    EndIf      
  EndForeach;
  PrintLn;
EndFor;


/////////////////////
/////END OF FILE/////
/////////////////////